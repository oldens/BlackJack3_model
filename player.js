import Card from "./card.js";
import Deck from "./deck.js";

class Player {

  static playersCount = 0;

  constructor(name, gameContainer) {
    this.id = Player.playersCount++;  
    this.gameContainer = gameContainer;
    this.name = name;
    this.hand = [];
    this.score = 0;
    this.handContainer = this.createHandContainerInGame(this.gameContainer);
    console.log(`‚úî –ì—Ä–∞–≤–µ—Ü—å ${this.name} —Å—Ç–≤–æ—Ä–µ–Ω–∏–π`, this.handContainer.id);
  }

  generateUniqueId() {
    return "player" + Symbol().toString().slice(7);
  } 

  createHandContainerInGame(gameContainer) {
    const handContainer = document.createElement("div");
    handContainer.classList.add("hand-container");
    handContainer.style.display = "flex";
    handContainer.style.flexDirection = "row";
    handContainer.style.margin = "10px";
    handContainer.id = `player_${this.id}`;
    const userScore = this.createUserScoreElement();
    handContainer.appendChild(userScore);
    this.gameContainer.appendChild(handContainer);
    return handContainer;
  }

  createUserScoreElement() {
    const userScore = document.createElement("div");
    userScore.id = this.id + "_score";
    userScore.innerHTML = this.name + " Score: " + this.score;
    return userScore;
  }

  addCard(card) {
    if (!card || !card.html) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞: –ø–µ—Ä–µ–¥–∞–Ω–æ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π –æ–±'—î–∫—Ç –∫–∞—Ä—Ç–∫–∏:", card);
      return;
    }
  
    if (!this.handContainer) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞: handContainer –Ω–µ —ñ—Å–Ω—É—î –¥–ª—è –≥—Ä–∞–≤—Ü—è", this.name);
      return;
    }
  
    if (typeof card.value !== "number") {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞: card.value –Ω–µ —î —á–∏—Å–ª–æ–º:", card);
      return;
    }
  
    this.hand.push(card);
    this.handContainer.appendChild(card.html);
    this.score += card.value;
  
    console.log(`‚úî –ì—Ä–∞–≤–µ—Ü—å ${this.name} –æ—Ç—Ä–∏–º–∞–≤ –∫–∞—Ä—Ç—É –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º ${card.value}`);
    card.show();
    this.updateScoreDisplay();
  }

  updateScoreDisplay() {
    const scoreElement = document.getElementById(this.id + "_score");
    
    if (!scoreElement) {
      console.error("‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –µ–ª–µ–º–µ–Ω—Ç –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É:", this.id + "_score");
      return;
    }
  
    scoreElement.textContent = `${this.name} Score: ${this.score}`;
    console.log(`‚úî –†–∞—Ö—É–Ω–æ–∫ –æ–Ω–æ–≤–ª–µ–Ω–æ: ${this.score}`);
  }

  reset() {
    console.log(`üîÑ –°–∫–∏–¥–∞–Ω–Ω—è –≥—Ä–∞–≤—Ü—è ${this.name}...`);
  
    this.hand = []; // –û—á–∏—â–µ–Ω–Ω—è –º–∞—Å–∏–≤—É –∫–∞—Ä—Ç –≥—Ä–∞–≤—Ü—è
    this.score = 0; // –û–±–Ω—É–ª–µ–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É
  
    if (!this.handContainer) {
      console.error("‚ùå –ü–æ–º–∏–ª–∫–∞: handContainer –Ω–µ —ñ—Å–Ω—É—î –¥–ª—è", this.name);
      return;
    }
  
    // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –∫–∞—Ä—Ç–∏ –∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≥—Ä–∞–≤—Ü—è
    this.handContainer.innerHTML = ""; 
    this.handContainer.appendChild(this.createUserScoreElement());
  
    // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ä–∞—Ö—É–Ω–∫—É –æ–Ω–æ–≤–ª–µ–Ω–∏–π
    this.updateScoreDisplay();
  }
}

export default Player;
